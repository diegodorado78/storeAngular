GUIA PROYECTO Angular
1. crear proyecto
2. instalar material: ng add @angular/material
3.instalar swiper: npm instalar swiper --save (opcional)
4. crear los modulos shared y core que comparten elementos y datos
   crear al archivo de servicios(datos y metodos para acceder)
   en core/services/products : ng g s products
5. crear el modulo material que va a guardar los componentes que voy a usar
6. crear los demas modulos del proyecto home,product,contact,demo
7. crear los componentes dentro de los modulos: ng g c product/components/productDetail
8. crear las Directivas y pipes dentro del modulo shared:
   ng g pipe shared/pipes/exponential
   ng g d shared/directives/highlight
9. crear componentes header y footer dentro de shared/components
   ng g c shared/components/header
   ng g c shared/components/footer
10. crear componente layout en el root, es decir sin modulo un layout
11. crear guardian para habilitar rutas: ng g g admin -> canActive
12. configuro rutas en el app.routing (que me lleven a cada modulo)
    import del Layout component y del guardian
    import de PreloadAllModules
13. creo el routing.module.ts y configuro las rutas de cada modulo
    importante incluir el archivo de routing en el .module.ts
14. crear el modelo de datos product.model.ts en el app root
15. instalo swiper si quiero y agrego las dependencias al angular.json
             "styles":  "./node_modules/swiper/swiper.min.css"
       agrego el html necesario en el componente banner para crerlo
16. si aparece error al importar material en el module, reescribo la ruta
17. instalamos flexboxgrid para usar grid basado en flexbox en angular
    npm i flexboxgrid --save
18 agregamos la dependencia al angular.json en styles
   "styles" : "./node_modules/flexboxgrid/dist/flexboxgrid.min.css",
19. creo modulo y routing del modulo con: ng g m admin --routing
10. instalar schematics con :ng add @angular/cdk
21. crear el componente form ng generate @angular/material:address-form admin/components/product-form
22. paso los modulos que importa schematic en admin a material
23.importo el material module en el admin module
24. convertir la app en una PWA: ng add @angular/pwa
25. add package.json: "prod": "ng build --prod"
26. npm run prod
27. npm install -g angular-http-server
28. cd dist/pwa-
29. angular-http-server
30. crear imagen docker: docker build -t charts .
31. mirar las imagenes creadas: docker ps -a
32. correr imagen: docker run -d -it -p 80:80 charts
33. ver la imagen: http://192.168.18.4/home
34. trabajar peticiones http
crear un objeto de tipo HttpClient:   constructor( private http: HttpClient ) {}
35.implementacion en service //variable entorno definida en environment.ts
getAllProducts(): Observable<Product[]> {
    return this.http.get<Product[]>(`${environment.url_api}/products`);
  }
36. instalar firebase
ng add @angular/fire
 37. voy a environment  y copio la configuracion de  firebase
38. voy a app.mudle  y agrego  la config de firebase(agrego los modulos)
39. AngularFireAuthModule,
    AngularFireModule.initializeApp(environment.firebase),
    AngularFireStorageModule,
    AngularFireAuthModule,
    AngularFireStorageModule
40.. creo un servicio  para hacer el auth
agrego esto a compiler options en ts.config.json
    "allowSyntheticDefaultImports": true


